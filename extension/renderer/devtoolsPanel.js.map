{"version":3,"file":"devtoolsPanel.js","sources":["/Users/junhongguo/browserDisk/src/renderer/global.css","/Users/junhongguo/browserDisk/src/renderer/entrys/devtoolsPanel.tsx","/Users/junhongguo/browserDisk/src/renderer/layout/index.tsx","/Users/junhongguo/browserDisk/src/renderer/pages/devtoolsPanel.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1742475839806\n        var cssReload = require(\"../../node_modules/.pnpm/@rspack+core@1.2.8_@swc+helpers@0.5.15/node_modules/@rspack/core/dist/cssExtractHmr.js\").cssReload(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","import { createRoot } from 'react-dom/client';\nimport { Layout } from '../layout';\nimport { DevtoolsPanelPage } from '../pages/devtoolsPanel';\nimport { StrictMode } from 'react';\n\nconst container = document.getElementById('root')!;\n\nconst root = createRoot(container);\n\nroot.render(\n  <StrictMode>\n    <Layout>\n      <DevtoolsPanelPage />\n    </Layout>\n  </StrictMode>\n);\n","import { FC, ReactNode } from 'react';\nimport '../global.css';\n\ninterface LayoutProps {\n  children?: ReactNode;\n}\nexport const Layout: FC<LayoutProps> = (props) => {\n  return <>{props.children}</>;\n};\n","import { FC, ReactNode } from 'react';\nimport { Allotment } from 'allotment';\nimport { Toaster } from 'react-hot-toast';\n\nimport 'allotment/dist/style.css';\ninterface DevtoolsPanelPageProps {\n  children?: ReactNode;\n}\nexport const DevtoolsPanelPage: FC<DevtoolsPanelPageProps> = (props) => {\n  return (\n    <Allotment>\n      <Allotment.Pane snap minSize={160} maxSize={720} preferredSize={410}>\n        <Toaster position=\"bottom-left\" />\n      </Allotment.Pane>\n      <Allotment.Pane>right</Allotment.Pane>\n    </Allotment>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AAKA;AACA;AAAA;;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AAIA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;AAEA;AAAA;;;;;;;;;;;;AAGA;AATA"}